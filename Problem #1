#include <algorithm>
#include <stack>
#include <cstdio>
#include <vector>
#include <iostream>

#define MAX 1009

using namespace std;

int d[MAX], d1[MAX], d2[MAX];

void ReadInput(vector< vector<int> > &a, int &n, int &m) {
    cin >> n >> m;
    
    a = vector< vector<int> >(n, vector<int> (m));
    
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            cin >> a[i][j];
}

void StackClear(stack<int> &st) {
    while(!st.empty())
        st.pop();
}

pair<pair<int, int> , pair<int, int> > Solve(vector <vector <int> > &a, int &n, int m) {
    pair<pair<int, int> , pair<int, int> > points_ans;
    int ans = 0;
    fill_n(d, m, -1);
    fill_n(d1, m, 0);
    fill_n(d2, m, 0);
    
    stack<int> st;
    
    for(int i = 0; i < n; i++) {
        
        for(int j = 0; j < m; j++) // top
            if (a[i][j] == 1)
                d[j] = i;
        
        StackClear(st);
        
        for(int j = 0; j < m; j++) { // left side
            while(!st.empty() && d[st.top()] <= d[j])
                st.pop();
            d1[j] = st.empty() ? -1 : st.top();
            st.push(j);
        }
        
        StackClear(st);
        
        for(int j = m - 1; j >= 0; j--) { //right side
            while(!st.empty() && d[st.top()] <= d[j])
                st.pop();
            d2[j] = st.empty() ? m : st.top();
            st.push(j);
        }
        
        for(int j = 0; j < m; j++) {
            int cur = (i - d[j]) * (d2[j] - d1[j] - 1);
            
            if(cur > ans) {
                ans = cur;
                points_ans.first.first = d1[j] + 1;
                points_ans.first.second = d[j] + 1;
                points_ans.second.first = d2[j] - 1;
                points_ans.second.second = i;
            }
        }
    }
    return points_ans;
}

void PrintAns (vector< vector<int> > &a, int &n, int &m, pair<pair<int, int> , pair<int, int> > points) {
    
    for(int j = points.first.second; j <= points.second.second; j++)
        for(int i = points.first.first; i <= points.second.first; i++)
            a[j][i] = -1;
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            if(a[i][j] == -1)
                cout << "# ";
            else
                cout << a[i][j] << ' ';
        }
        cout << endl;
    }
}

int main() {
    vector< vector<int> > a;
    int n, m;
    
    ReadInput(a, n, m);
    
    pair<pair<int, int> , pair<int, int> > points = Solve(a, n, m);

    
    PrintAns(a, n, m, points);
}
