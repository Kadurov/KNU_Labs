//Solve for O(n^2), if have time I'll solve that for O(n logn)

#include <stdio.h>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <set>

#define X first
#define Y second
#define eps 0.000000001
#define MAXN 1000000

using namespace std;

bool cmp(pair<int, int> p1, pair<int, int> p2) {
    return p1.X < p2.X;
}

void ReadInput(vector< pair<int, int> > &a, int &n) {
    cin >> n;
    a = vector< pair<int, int> >(2 * n);
    
    for(int i = 0; i < 2 * n; i++) {
        cin >> a[i].X;
        if(i & 1)
            a[i].Y = -1;
        else
            a[i].Y = 1;
    }
    
    sort(a.begin(), a.end(), cmp);
}

int Solve(vector< pair<int, int> > a, int n) {
    int ans = -1, cur = 0;
    for(int i = 0; i < 2 * n; i++) {
        cur += a[i].Y;
        ans = max(ans, cur);
    }
    
    return ans;
}

int main() {
    int n;
    vector< pair<int, int> > a;
    ReadInput(a, n);
    
    cout << Solve(a, n) << endl;
}
